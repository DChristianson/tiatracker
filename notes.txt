/* notice that thread no longer inherits from QThread */
class thread : public QObject
{
  Q_OBJECT

 private:
  QTimer *_timer;

 public slots:
  void startTimer(int timeout);
  void _timeout(void);

};

void
thread::startTimer(int timeout) {
  if(!_timer)
    _timer = new QTimer();

      QObject::connect(_timer, SIGNAL(timeout()), this, SLOT(_timeout()));

  _timer->setInterval(timeout);
  _timer->start();
}

void
threadn::_timeout(void) {
  qDebug() << "timeout from" << QThread::currentThreadId();
}


---

MainWindow::MainWindow(QWidget *parent) :
    QMainWindow(parent),
    ui(new Ui::MainWindow)
{
  ui->setupUi(this);

  thread *t = new thread();
  QThread *qthread = new QThread();

  QObject::connect(this, SIGNAL(startTimer(int)), t, SLOT(startTimer(mode,int)), Qt::QueuedConnection);
  t->moveToThread(qthread);

  qthread->start(QThread::HighestPriority);

  qDebug() << "Hello from " << QThread::currentThreadId();

  emit startTimer(1000);
}


